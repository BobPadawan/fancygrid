:ruby
  searchable_columns = fancygrid.serachable_leafs.map{ |leaf| 
    [leaf.human_name, leaf.tag_name] 
  }
  search_operators = Fancygrid.extended_search_operators.map { |op| 
    [I18n.t("fancygrid.search.operator.#{op.to_s}" , :default => op.to_s.humanize ), op.to_s] 
  }
    
.js-search
  .top
    %span
      = check_box_tag(:all, :all, fancygrid.view.get_search_operator.to_s == "all", :class => "js-search-conditions")
    %span
      = I18n.t("fancygrid.search.conditions", :default => 'All conditions must met:')
      
  %ul.js-search-criteria
    - fancygrid.each_leaf do |leaf|
      - fancygrid.view.get_node_search_conditions(leaf).each do |condition|
        %li.js-search-criterion
          = select_tag(:column_name, options_for_select(searchable_columns, leaf.tag_name))    
          = select_tag(:operator, options_for_select(search_operators, condition[:operator]))
          %input{ :type => :text, :name => :column_value, :value => condition[:value] }
          %button.js-search-criterion-remove= "-"
  
  .bottom
    %button.js-clear
      =I18n.t("fancygrid.search.clear", :default => 'remove all') 
    %button.js-search-submit
      =I18n.t("fancygrid.search.submit", :default => 'search')
    %button.js-search-criterion-add
      = "+"
      
.js-search-template
  %li.js-search-criterion
    = select_tag(:column_name, options_for_select(searchable_columns))    
    = select_tag(:operator, options_for_select(search_operators ))
    %input{ :type => :text, :name => :column_value, :value => "" }
    %button.js-search-criterion-remove= "-"
    